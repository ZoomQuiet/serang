SeRang engine for Rational application network group

=简述=

==  appEngine有两个基本的特点：==

    # 为符合AE规则的应用提供运行环境(SysEnv)
    # AE平台提供应用的扩展能力(BaseStructure)

    满足这俩个条件，用户就可以将自己的应用发布到这个平台上运行，同时可以灵活选择应用的负载能力。
==  不能让用户在机器上为所欲为，所以需要一个沙箱(SandBox)：==

    # 限制用户的行为，比如不能直接访问文件系统，限制对内存的使用（提供memCache模块），限制循环、递归，或者能对用户的程序按时间片执行。然后通过平台提供的模块来弥补这些限制造成的不便，GAE就是这样作：URL Fetch， Memory Cache，后面还会有time

==  基础设施，应用要存储的数据，必须有一个统一的方式解决==

    # 提供分布式数据存储支持，包括结构化数据(DataStore)以及文件(DistributeFileSystem)的存储

==  方便开发的需求，需要其他服务组件：==

    # 用户
    # cache
    # mail
    # queue
    # 定时器
    # 其他,这部分是可以被不断加强的

==  为了支持用户的工作，还需要作的一些事情：==

    # SDK，封装基础应用的访问接口，模拟运行环境，制定AE的编程规范
    # 方便的发布方式
    # 管理入口

==  为了平台能够完整的对外服务，需要以下应用配合，这些应用可以作为AE上的应用存在==

    # app注册，为app分配唯一ID，app的发布、运行和维护都基于ID进行
    # app源程序管理，将用户的app放在AE的DFS上

=名称=
不过这名字忒土了，要有趣有意义好记，
建议先在社区中讨论一下

比如说 息壤 XiRang
等等 ;)

息壤，信息的土壤?

NOT! 息壤 是中国神话中的神物，可以生成土壤的法宝哪，
所以，可以是
SeRang
= SeRang engine for Rational application network group
面向理性应用群网的息壤引擎

咔咔咔！


息壤 是中国神话中的神物，可以生成土壤的法宝哪，
http://zhidao.baidu.com/question/11894088.html?fr=qrl
http://scholar.ilib.cn/abstract.aspx?A=mzsfgdzkxxxb200201010
等等，都有相关描述的...

我给理解成能够生长应用的土壤，哈哈

=原型开发计划=
    # 应用可运行
      * 环境,应用提前装好
      * MN结构确定, MN能运行python程序,并为每个运行在其上的app区分不同的运行空间,
        前期可以简单的用应用ID在URI上作区分
      * Client可运行,根据App-MN映射表转发应用请求到MN
    # 应用可发布
      * MN向AD开放写权限,用于用户App发布,能向MR注册
      * MR可运行,收集MN的注册信息,响应AR的请求
      * AD可运行,能将接受应用的上传,并复制在不同的MN上
      * AR可运行,能注册应用,并调用MR
    # 应用可更新
     * AR可以调整应用的映射关系
     * AR能够调度MR增加或减少AG中的MN数量,AR和MR之间的交互做好
     * 增加一些控制的策略
        * 每次更新都是一个新的发布
            * 默认版本的MN数量
            * 其他版本的MN数量
        * 如何通过AR修改MN数量,满足额外购买的需要
    # 机器可替换
      * 考虑出错的情况
      * MR能接受调用,替换MN
      * Client可替换、扩展,client和AR之间交互
    # 系统环境可更新
      * BSD可运行,能够响应MR的调度,对MN操作
    # 管理相关
    # SandBox可运行
    # 基础服务相关
      * DataStore封装
      * DFS封装
      * 其他封装